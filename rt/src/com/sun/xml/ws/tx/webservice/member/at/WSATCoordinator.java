/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright 1997-2008 Sun Microsystems, Inc. All rights reserved.
 * 
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License. You can obtain
 * a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 * or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 * 
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 * Sun designates this particular file as subject to the "Classpath" exception
 * as provided by Sun in the GPL Version 2 section of the License file that
 * accompanied this code.  If applicable, add the following below the License
 * Header, with the fields enclosed by brackets [] replaced by your own
 * identifying information: "Portions Copyrighted [year]
 * [name of copyright owner]"
 * 
 * Contributor(s):
 * 
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */

package com.sun.xml.ws.tx.webservice.member.at;

import com.sun.xml.ws.api.addressing.WSEndpointReference;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.EndpointReference;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;
import java.util.Map;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.1-hudson-812-EA2
 * Generated source version: 2.0
 */
@WebServiceClient(name = "WSATCoordinator", targetNamespace = "http://schemas.xmlsoap.org/ws/2004/10/wsat", wsdlLocation = "WEB-INF/wsdl/wsat.wsdl")
public class WSATCoordinator
        extends Service {

    private final static URL WSATCOORDINATOR_WSDL_LOCATION;

    static {
        WSATCOORDINATOR_WSDL_LOCATION = Thread.currentThread().getContextClassLoader().getResource("WEB-INF/wsdl/wsat.wsdl");
        //logger.finest("static initializer:", "WSDL_LOCATION = " + WSATCOORDINATOR_WSDL_LOCATION);
    }

    public WSATCoordinator(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSATCoordinator() {
        super(WSATCOORDINATOR_WSDL_LOCATION, new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "WSATCoordinator"));
    }

    /**
     * @return returns CompletionCoordinatorPortType
     */
    @WebEndpoint(name = "CompletionCoordinator")
    public CompletionCoordinatorPortType getCompletionCoordinator() {
        return (CompletionCoordinatorPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "CompletionCoordinator"), CompletionCoordinatorPortType.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns CompletionCoordinatorPortType
     */
    @WebEndpoint(name = "CompletionCoordinator")
    public CompletionCoordinatorPortType getCompletionCoordinator(WebServiceFeature... features) {
        return (CompletionCoordinatorPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "CompletionCoordinator"), CompletionCoordinatorPortType.class, features);
    }

    /**
     * @return returns CoordinatorPortType
     */
    @WebEndpoint(name = "Coordinator")
    public CoordinatorPortType getCoordinator() {
        return (CoordinatorPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "Coordinator"), CoordinatorPortType.class);
    }

    /**
     * @param epr      EndpointReference of returned proxy.
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns CoordinatorPortType
     */
    @WebEndpoint(name = "Coordinator")
    public CoordinatorPortType getCoordinator(EndpointReference epr, WebServiceFeature... features) {
        CoordinatorPortType result =
                (CoordinatorPortType) super.getPort(epr, CoordinatorPortType.class, features);
        
        return result;
    }
    
    /**
     * @return returns ParticipantPortType
     */
    @WebEndpoint(name = "Participant")
    public ParticipantPortType getParticipant() {
        return (ParticipantPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "Participant"), ParticipantPortType.class);
    }

    /**
     * @param epr      EndpointReference of returned proxy.
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ParticipantPortType
     */
    @WebEndpoint(name = "Participant")
    public ParticipantPortType getParticipant(EndpointReference epr, WebServiceFeature... features) {
        ParticipantPortType result =
                (ParticipantPortType) super.getPort(epr, ParticipantPortType.class, features);
//        workaround((BindingProvider) result, epr);
        return result;
    }

    /**
     * @return returns CompletionInitiatorPortType
     */
    @WebEndpoint(name = "CompletionInitiator")
    public CompletionInitiatorPortType getCompletionInitiator() {
        return (CompletionInitiatorPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "CompletionInitiator"), CompletionInitiatorPortType.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns CompletionInitiatorPortType
     */
    @WebEndpoint(name = "CompletionInitiator")
    public CompletionInitiatorPortType getCompletionInitiator(WebServiceFeature... features) {
        return (CompletionInitiatorPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "CompletionInitiator"), CompletionInitiatorPortType.class, features);
    }


}
